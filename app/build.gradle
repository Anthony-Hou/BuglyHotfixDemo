apply plugin: 'com.android.application'
//apply plugin: 'bugly'
//
//
//bugly {
//    appId = '4c3211e8e6' // 注册时分配的App IDc
//    appKey = '03c92b6b-769f-4604-8185-890d01507a15' // 注册时分配的App Key
//    debug = true //开启插件调试模式之后，将打印更详细日志，并在Debug编译打包的时候自动执行符号表文件上传任务。发布的时候关闭。
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:23.2.1'

    // 多dex配置
    implementation "com.android.support:multidex:1.0.1"
    // 集成Bugly热更新aar（本地集成使用方式）
//      implementation(name: 'bugly_crashreport_upgrade-1.3.2', ext: 'aar')
    // 远程仓库集成方式（推荐）
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'

    // walle（多渠道使用）
    // implementation 'com.meituan.android.walle:library:1.1.3'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    // 编译选项
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    // recommend
    dexOptions {
        jumboMode = true
    }

    // 签名配置
    signingConfigs {
        release {
            try {
                storeFile file("./keystore/release.keystore")
                storePassword "testres"
                keyAlias "testres"
                keyPassword "testres"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            storeFile file("./keystore/debug.keystore")
        }
    }

    // 默认配置
    defaultConfig {
        applicationId "com.tencent.bugly.hotfix"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 3
        versionName "2.0"

        // 开启multidex
        multiDexEnabled true
    }

    // 构建类型
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    // 多渠道配置
   /*productFlavors {
        xiaomi {

        }
        yyb {

        }
    }*/

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

// 依赖插件脚本
apply from: 'tinker-support.gradle'

// 多渠道使用walle示例（注：多渠道使用）
//apply from: 'multiple-channel.gradle'


